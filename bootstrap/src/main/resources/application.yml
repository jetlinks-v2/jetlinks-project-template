server:
    port: 8844
    max-http-request-header-size: 200KB
    error:
        include-message: always
spring:
    profiles:
        active: default,dev,local
    application:
        name: jetlinks-platform
    jackson:
        date-format: yyyy-MM-dd HH:mm:ss
        time-zone: Asia/Shanghai
        serialization:
            WRITE_DATES_AS_TIMESTAMPS: true
        default-property-inclusion: non_null
    web:
        resources:
            static-locations: file:./static,classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/, classpath:/public/
    r2dbc:
        url: r2dbc:postgresql://${DB_HOST:127.0.0.1}:${DB_PORT:5432}/${DB_DATABASE:jetlinks}
        username: ${DB_USERNAME:postgres}
        password: ${DB_PASSWORD:jetlinks}
        pool:
            max-size: 32
            max-idle-time: 60s
            max-life-time: 1m
            acquire-retry: 3
    #    properties:
    #      preparedStatementCacheQueries: 100
    codec:
        max-in-memory-size: 100MB
    reactor:
        debug-agent:
            enabled: true # 开启调试代理,在打印异常时将会生成调用踪栈信息
    elasticsearch:
        uris: ${ES_URIS:localhost:9200} # ES集群地址,多个地址用逗号分隔
        socket-timeout: 10s
        connection-timeout: 15s
        username: ${ES_USERNAME:""}
        password: ${ES_PASSWORD:""}
    data:
        redis:
            host: ${REDIS_HOST:127.0.0.1}
            port: ${REDIS_PORT:6379}
            timeout: 20s
            password: ${REDIS_PASSWORD:iot@cloud}
easyorm:
    default-schema: ${DB_SCHEMA:public} # 数据库默认的schema
    dialect: postgres #数据库方言
elasticsearch:
    index:
        default-strategy: time-by-month #默认es的索引按月进行分表
        settings:
            number-of-shards: 1 # es 分片数量，通常对应es集群节点数量
            number-of-replicas: 0 # 副本数量
#      options:
#        lifecycle.name: lifecycle_name # 在kibana中配置的生命周期
influxdb:
    enabled: true #开启inflxdb
    endpoint: "http://localhost:8086/"
    database: jetlinks
    max-in-memory-size: 100MB
    socket-timeout: 5S
    connection-timeout: 10S
tdengine:
    enabled: true #开启tdengine
    database: jetlinks
    connector: restful # 支持restful和jdbc
    jdbc:
        url: jdbc:TAOS://127.0.0.1:6030/jetlinks
        username: root
        password: taosdata
        maximum-pool-size: 32
    restful:
        endpoint: "http://localhost:6041/"
        username: root
        password: taosdata
        max-in-memory-size: 100MB
        socket-timeout: 5S
        connection-timeout: 10S
clickhouse:
    enabled: false
    restful:
        url: http://127.0.0.1:8123
        username: default
        password: jetlinks
    max-batch-size: 10000 # 最大批量提交数量
    batch-duration: 2s # 批量提交间隔
device:
    message:
        writer:
            time-series:
                enabled: true # 直接写出设备消息数据到时序数据库
            geo:
                enable-property: true
    session:
        persistence:
            session-load-timeout: 60s
captcha:
    enabled: true # 开启验证码
    ttl: 2m #验证码过期时间,2分钟
hsweb:
    cors:
        enable: true
        configs:
            -   path: /**
                allowed-headers: "*"
                allowed-methods: [ "GET", "POST", "PUT", "PATCH", "DELETE", "OPTIONS" ]
                allowed-origins: [ "*" ]
                #        allow-credentials: false
                max-age: 1800
    dict:
        enum-packages: org.jetlinks
    file:
        upload:
            static-file-path: ./static/upload
            static-location: http://127.0.0.1:8844/upload
            deny-files: php,asp,jsp,exe,dll,so,cmd,bat,sh,shell,js,html
    webflux:
        response-wrapper:
            enabled: true #开启响应包装器(将返回值包装为ResponseMessage)
            excludes: # 这下包下的接口不包装
                - org.springdoc
    authorize:
        auto-parse: true
    #  user-token:
    #    allopatric-login-mode: offlineOther  ## 设置异地登录模式为 将其他地方登录的相同用户踢下线
    #    allopatric-login-modes:
    #      app: offlineOther
    permission:
        filter:
            enabled: true # 设置为true开启权限过滤,赋权时,不能赋予比自己多的权限.
            exclude-username: admin # admin用户不受上述限制
            un-auth-strategy: ignore # error表示:发生越权时,抛出403错误. ignore表示会忽略越权的赋权.
    cache:
        type: redis
        redis:
            local-cache-type: caffeine
        caffeine:
            maximum-size: 10240
jetlinks:
    server-id: ${spring.application.name}:${server.port} #设备服务网关服务ID,不同服务请设置不同的ID
    cluster:
        id: ${jetlinks.server-id}
        name: ${spring.application.name}
        port: 1${server.port} # 集群通信通信本地端口
        external-host: 127.0.0.1  #集群节点通信对外暴露的host
        external-port: ${jetlinks.cluster.port} #集群节点通信对外暴露的端口
        rpc-port: 2${server.port} # 集群节点本地RPC端口
        rpc-external-host: ${jetlinks.cluster.external-host}  #集群节点RPC对外暴露host
        rpc-external-port: 2${server.port} #集群节点RPC对外暴露端口
    #    seeds:  #集群种子节点,集群时,配置为集群节点的 external-host:external-port
    #      - 127.0.0.1:18844
    authentication:
        defaults:
            user:
                admin:
                    - "*:*"
    logging:
        system:
            context:
                server: ${jetlinks.server-id}
    protocol:
        spi:
            enabled: false # 为true时开启自动加载通过依赖引入的协议包
    device:
        registry:
            auto-discover: enabled  #当无法从注册中心获取设备时,尝试从数据库中获取,并自动注册到注册中心.
        storage:
            default-policy: default-row # 默认设备数据存储策略
            enable-last-data-in-db: false # 是否将设备最新到数据存储到数据库
    #      log:
    #        excludes: # 这些日志不存储
    #          - REPORT_PROPERTY
    tag:
        auto-delete:
            enabled: true  #删除物模型的标签时，自动删除对应的标签值
    user-init:
        enabled: true
        users:
            -   id: 1199596756811550720
                username: admin
                name: 超级管理员
                type: admin
                password: ${ADMIN_USER_PASSWORD:HT@@sv2Pd0}
                status: 1
rule:
    engine:
        server-id: ${jetlinks.server-id}
        server-name: ${spring.application.name}
area:
    builtin:
        enabled: true # 为true时,初次启动会加载内置地区到数据库
logging:
    level:
        org.jetlinks: debug
        rule.engine: debug
        org.hswebframework: debug
        org.springframework.transaction: debug
        org.springframework.data.r2dbc.connectionfactory: warn
        io.micrometer: warn
        org.hswebframework.expands: error
        system: debug
        org.jetlinks.rule.engine: debug
        org.jetlinks.supports.event: warn
        org.springframework: warn
        org.apache.kafka: warn
        org.jetlinks.pro.device.message.writer: warn
        org.jetlinks.pro.elastic.search.service: warn
        org.jetlinks.pro.elastic.search.service.reactive: warn
        org.jetlinks.pro.network: warn
        org.jetlinks.demo: warn
        io.vertx.mqtt.impl: warn
        org.jetlinks.supports.device.session: warn
        org.elasticsearch.deprecation: off
        org.jetlinks.supports.cluster: warn
        #    org.springframework.data.elasticsearch.client: trace
        #    org.elasticsearch: error
        org.jetlinks.pro.influx: trace
        org.elasticsearch.deprecation.search.aggregations.bucket.histogram: off
        "org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker": error
        "org.elasticsearch.client.RestClient": error
    config: classpath:logback-spring.xml
    logback:
        rollingpolicy:
            max-file-size: 100MB
            max-history: 7
            total-size-cap: 10GB
    file:
        name: ./data/logs/${spring.application.name}_${server.port}.log
        path: ./data/logs
    threshold:
        file: INFO # 文件只记录INFO以上的日志
        console: TRACE
        event: WARN # 事件日志只记录WARN以上的日志
vertx:
    max-event-loop-execute-time-unit: seconds
    max-event-loop-execute-time: 30
    max-worker-execute-time-unit: seconds
    max-worker-execute-time: 30
    prefer-native-transport: true
micrometer:
    time-series:
        tags:
            server: ${jetlinks.server-id}
        metrics:
            default:
                step: 30s
        ignore:
            - jetlinks-metrics #忽略内部监控信息
springdoc:
    swagger-ui:
        path: /swagger-ui.html
    #  packages-to-scan: org.jetlinks
    group-configs:
        -   group: 设备管理相关接口
            packages-to-scan:
                - org.jetlinks.pro.device
                - org.jetlinks.pro.geo.web
                - org.jetlinks.pro.media.web
            paths-to-exclude:
                - /device-instance/**
                - /device-product/**
                - /protocol/**
                - /api/v1/geo/object/**
        -   group: 规则引擎相关接口
            packages-to-scan: org.jetlinks.pro.rule.engine.web
            paths-to-exclude: /api/**
        -   group: 通知管理相关接口
            packages-to-scan: org.jetlinks.pro.notify.manager.web
        -   group: 设备接入相关接口
            packages-to-scan:
                - org.jetlinks.pro.network.manager.web
                - org.jetlinks.pro.device.web
            paths-to-match:
                - /gateway/**
                - /network/**
                - /protocol/**
        -   group: 系统管理相关接口
            packages-to-scan:
                - org.jetlinks.pro.auth
                - org.hswebframework.web.system.authorization.defaults.webflux
                - org.hswebframework.web.file
                - org.hswebframework.web.authorization.basic.web
                - org.jetlinks.pro.openapi.manager.web
                - org.jetlinks.pro.logging.controller
                - org.jetlinks.pro.tenant.web
    cache:
        disabled: false
messaging:
    mqtt:
        enabled: true
        port: 11883
        host: 0.0.0.0
sso:
    token-set-page-url: http://localhost:9000/api/token-set.html
    bind-page-url: http://localhost:9000/#/account/center/bind
    base-url: http://localhost:9000/api
api:
    urls:
        big-screen-path: http://localhost:9002/
    base-path: http://127.0.0.1:${server.port}/
trace:
    enabled: true
system:
    config:
        scopes:
            -   id: front
                name: 前端配置
                public-access: true
            -   id: paths
                name: 访问路径配置
                public-access: true
                properties:
                    -   key: base-path
                        name: 接口根路径
                        default-value: http://localhost:9000/api
                    -   key: sso-redirect
                        name: sso回调路径
                        default-value: http://localhost:9000
                    -   key: sso-bind
                        name: sso用户绑定路径
                        default-value: http://localhost:9000/#/account/center/bind
                    -   key: sso-token-set
                        name: sso登陆成功后Token设置路径
                        default-value: http://localhost:9000/api/token-set.html

            -   id: amap
                name: 高德地图配置
                public-access: false
                properties:
                    -   key: apiKey # 配置id
                        name: 高德地图ApiKey # 名称
#            default-value: "请输入高德地图的apikey" # 默认值
management:
    defaults:
        metrics:
            export:
                enabled: false
    simple:
        metrics:
            export:
                enabled: false
    health:
        elasticsearch:
            enabled: false
    elastic:
        metrics:
            export:
                enabled: false
file:
    manager:
        storage-base-path: "./data/files"
        read-buffer-size: 64KB
network:
    resources:
        - 1883-1890
        - 8800-8810
        - 5060-5061
frp:
    enabled: false # 是否启用边缘网关-远程控制
    config:
        publicHost: 127.0.0.1 # frp服务公网IP
        bindPort: 7000 # frp服务接入端口
        token: jetlinks # 密钥
        resources:
            - 8811-8820/tcp # 可用的端口
timescaledb:
    enabled: false
    shared-spring: true # 当平台也使用timescaledb时可以设置为true,共享平台的数据库连接.
    r2dbc: # R2dbcProperties  shared-spring 为false时需要设置相关配置
        url: r2dbc:postgresql://localhost:5432/jetlinks
        username: postgres
        password: jetlinks
        pool:
            max-size: 64
    schema: public # 数据存储的schema
    write-buffer: # BufferProperties 写入缓冲配置,数据将缓冲进行批量写入
        parallelism: 8 # 缓冲写入并行度
        size: 1000 # 最大缓存数量
        timeout: 1s # 缓冲超时时间
    time-series:
        enabled: true # 开启时序数据支持,平台监控统计等将记录到timescaledb
        retention-policy: 30d #数据保留策略
        chunk-time-interval: 1d # 数据分区间隔,相同间隔内的数据将存储到一个分区,根据查询需求调整
    things-data:
        enabled: true # 开启物（设备）数据存储策略支持
        chunk-time-interval: 7d # 数据分区间隔,相同间隔内的数据将存储到一个分区,根据查询需求调整
        #retention-policy: 30d  # 设备存储策略的保留策略
